// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
}

model Game {
  id               Int            @id @default(autoincrement())
  name             String         @unique
  description      String?
  developer        String?
  numPlayersByTeam Int
  championships    Championship[]
}

model Championship {
  id               Int                @id @default(autoincrement())
  name             String
  description      String?
  year             Int
  status           ChampionshipStatus @default(REGISTRATION_OPEN)
  format           String
  numbersOfMatches Int                @default(1) // MD1, MD3, etc.
  beginDate        DateTime
  endDate          DateTime?
  teams            Team[]
  matches          Match[]
  gameId           Int
  Game             Game               @relation(fields: [gameId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Team {
  id           String       @id @default(uuid())
  name         String
  teamMember   TeamMember[]
  Championship Championship @relation(fields: [championshipId], references: [id])

  championshipId Int
  createdAt      DateTime @default(now())
}

model TeamMember {
  id       String  @id @default(uuid())
  nickName String
  Team     Team?   @relation(fields: [teamId], references: [id])
  teamId   String?
}

model Match {
  id String @id @default(uuid())

  Championship   Championship? @relation(fields: [championshipId], references: [id])
  championshipId Int?
}

enum ChampionshipStatus {
  REGISTRATION_OPEN
  REGISTRATION_CLOSED
  IN_PROGRESS
  CLOSED
}

enum Role {
  STUDENT
  ADMIN
}
